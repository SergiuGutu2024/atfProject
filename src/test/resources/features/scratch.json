
grep -rn /var/ips/rawlog -e 20231227SABARCBARC6H04911327756681
grep -rn /opt/IBM/WebSphere/profiles/AppSrv01/ -e 20231221SALOLKLOLK6H12410810060757

grep -r /opt/ips/maps/maps.log -e 20231111SALOLKLOLK6H47911141602413
grep -r /opt/ips/msim/logs/msim.open -e 20231221SALOLKLOLK6H12410810060757

dupcheck:check(payment, {"20231226SALOLKLOLK6H23511300472040", "credit_transfer_request"}).
transaction_distributor:txid_to_nodes("20231226SALOLKLOLK6H97911046055458").
rpc:multicall(application:get_env(fps,nodes,[]),dbutils,fragmented_transaction,[fun() -> T={"20231226SALOLKLOLK6H98711556221225","credit_transfer_request"},mnesia:read({blackboard_1, T}) ++ mnesia:read({blackboard_2, T}) end]).


ICAgICAgICAgICAgICAgIDxwczpGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwczpDbHJTeXNNbWJJZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBzOk1tYklkPlNBUkJTRzwvcHM6TW1iSWQ
grep -rn /opt/ips/maps/ -e 20230921SABARCBARC6B00010837000077 //MAPS
grep -rn /var/ips/rawlog/sw3@ips-node3/ -e 20220630SAHSBCHSBC6B00010817000081 //switch RAWLOGS

grep -oPz '(?s)<ct:SvcLvl><ct:Cd>.*?20231108SABARCBARC6H47411521011634.*?</ct:Cd></ct:SvcLvl>' -r /var/ips/rawlog/maps/payments * grep -oP '(?<=<ct:SvcLvl><ct:Cd>).*?(?=</ct:Cd></ct:SvcLvl>)' * grep 'VA'


tailf /opt/ips/maps/maps.log

&quot;

mvn test -Dtest=SamaRegressionRunner -Dgroups=SAMA-12182

//RAWLOGS
grep -rn /var/ips/rawlog/ -e 20221102SARBSGRBSG6B00011531000024
grep -rn 20221026SABARCBARC6B00011325000008 /var/ips/*log

//download file from server to local
scp root@ips-node1.local:/opt/IBM/WebSphere/profiles/AppSrv01/backoffice.log /Users/stanislav.scurtu/Documents/Defects/SAMA/SAMA-11420/R2.1/

JSESSIONID=0000fiCzEs3TjxO-p8XQJVLdOC4:-1; Path=/; HttpOnly;

//MSIM
grep -rn /opt/ips/msim/logs/ -e 20231103SABARCBARC6H64711357603943

//Transformer
grep -rn /opt/IBM/WebSphere/profiles/AppSrv01/ -e 20230109SABARCBARC6B00011521000019

tail -f /opt/IBM/WebSphere/profiles/AppSrv01/backoffice.log
/opt/IBM/WebSphere/profiles/AppSrv01/transformer.log
less -n +F //alternative to tail
/opt/ips/msim/logs/msim.open //MSIM logs

caffeinate -d

value
#page: DASHBOARD
#actions:
#- pageAction: refresh
#- getText:
#element: creditTransferValueSentACTC
#alias: regexCT
#extractions:
#regexValue: "#regex(#extractByKey(storage, 'regexCT'), '(\\d+)')"
#validations:
#validate(regexCT): 48

"request": {
"requesterParticipantCode": "MAPS",
"participantCode": "SARBSG",
"proxy": {
"type": "MSISDN",
"value": "951345678"
}

\b\S*?\.\S*?StrtNm\b
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 github token

To restart WebSphere:
-------
STOP: /opt/IBM/WebSphere/profiles/AppSrv01/bin/stopServer.sh server1
START: /opt/IBM/WebSphere/profiles/AppSrv01/bin/startServer.sh server1

<p3:IBAN>ZT611904300234573201</p3:IBAN>

-->
ops-console-server.log

to test proxy pretender:
on node1 go to "opt/ips/maps/mps-pretender-mastercard" and run command "java -jar mps-pretender-mastercard.jar"
opt/ips/maps/mps-pretender-mastercard/config path este asa un file "lookup_configuration.json"
acolo se poate de vazut combinatiile de scenarii care sepoate de simulat happy flow si errors pentru proxy

node1
cd ..
cd opt/ips/maps/mps-pretender-mastercard
java -jar mps-pretender-mastercard.jar
<--

Requesting the Scheduled report:
From the TXN DB change the NEXT_FIRE_TIME into the T_QRTZ_TRIGGERS table with the time and date you wish to generate the Scheduled report.
Check in the following site to get the UNIX TimeSpam: https://www.epochconverter.com/


find / -name *.log
find / -name backoffice.log -exec cat {} \;


grep -A1 -B1 "ERROR" backoffice.log //show prev and next row of the searchring word

cat /opt/IBM/WebSphere/profiles/AppSrv01/backoffice.log

app logs:
find / -name *.log

switch logs:
find / -name *.open

cd /var/ips/rawlog/sw2@hbsw5104/
grep -rn 20220114PARTICIP023B00000719162071

grep -rn /opt/ips -e IST.YML

Git token: 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

CERT2
User: mc
Pass: _CHange1t

hbsw5103 switch:
grep -rn /var/ips/rawlog/sw1@hbsw5103/ -e 20220117PARTICIP023B64627519423053
hbsw5104 switch:
grep -rn /var/ips/rawlog/sw2@hbsw5104/ -e 20220117PARTICIP023B64627519423053
hbsw5603 switch:
grep -rn /var/ips/rawlog/sw3@hbsw5603/ -e 20220117PARTICIP023B64627519423053
hbsw5604 switch:
grep -rn /var/ips/rawlog/sw4@hbsw5604/ -e 20220117PARTICIP023B64627519423053

Maps:
grep -rn /apps_01/ips/logs/MAPS_ISO20022/rawlog/ -e 20220117BANKPHPHXXXB027421066

*.local, 169.254/16, *vocalink.co.uk, 10/8, 172.16/12, 192.168/16

T_L10N_SYSTEM_PARAMETERS:
CALENDAR_TRANSMISSION_EVENT_DELAY_S 10
SETT_TRANS_EVENT_DELAY_S_CONF 10
SEND_INQ_REQ_INIT_DELAY_S 10
SEND_LIQ_INIT_DELAY_S 10

T_CALENDAR_SCHEDULE_EVENT <

T_SETTLEMENT_HISTORY

date

BEGIN //DWH only
pkg_extract_and_load.refresh;
pkg_transform.top_up_dimensions;
pkg_extract_and_load.batches;
pkg_transform.top_up_batches;
pkg_extract_and_load.time;
END;

T_PAYMENT_ADMIN_TXN

When Token Subject in Postman 'sub' holds
1. 'txn' or 'rpttxn' then fixed value 'ICRT' in paymentTypeLclInstrm
2. 'billspay' or 'rptbillspay' fixed value 'IBPS' in paymentTypeLclInstrm
3. 'reqtopay'or 'rptreqtopay' fixed value 'IRTP' in paymentTypeLclInstrm
4. 'p2pqrpay' or 'rptp2pqrpay' fixed value 'QCRT' in paymentTypeLclInstrm
5. 'p2bqrpay' or 'rptp2bqrpay' fixed value 'QBPS' in paymentTypeLclInstrm
6. 'p2mpay' or rptp2mpay' fixed value 'QP2M' in paymentTypeLclInstrm
7. 'p2micropay' or 'rptp2micropay' fixed value 'QP2E' in paymentTypeLclInstrm

ISO transactions, modify local instrument here
"paymentTypeLclInstrm": "ICRT", -> or ''QP2E'' etc...

For subject "txn", "rpttxn","reqtopay", and "rptreqtopay" - param3 does not need to be validated for tilde, just a pass-through.
For subject "p2pqrpay" and "rptp2pqrpay" param3 will contain 3 tilde "~~~"
For subject "p2mpay", "rptp2mpay","p2micropay", "rptp2micropay","billspay", "rptbillspay","p2bqrpay" and "rptp2bqrpay" - param3 will contain 4 tilde "~~~~"
https://ie-jira.vocalink.co.uk/browse/MAPS-1525

phlp,phlp-aws,phlp-jenkins,phlp-smoke,phlp-mtls
--tags @SMOKE --tags ~@Manual_Only --tags ~@Deprecated


RabbitMQ:
login: user
pass: secret


Tests passed on release 3.2.1.

Test evidence: TestEvidence_PHLPDEF-1265.zip

Environment details:

maps: 2.0.11-SAMA-R2.1
backoffice: 2.10.0-23-sama-R2.1
database: 2.10.0-27-sama-R2.1
switch: 2.10.0-19-sama-R2.1
opsui: 2.10.0-14-sama-R2.1
transformer: 2.9.1-17-sama-R2.1
msim: 2.10.0-6-sama-R2.1

ips-messages-iso8583: 0.7.3-phlp-release
ips-messages-jwt: 0.8.4-phlp-release
ips-messages-iso20022: 2.0.1-4-phlp-release
participant-test-simulators: 2.4.1-8-phlp-release


#AWS changing date
node1, node3, ips-database
date -s "03 MAR 2022 20:30:00" //change date

supervisorctl restart bo1-tomcat //restart bo
systemctl restart BO1.service //restart bo
supervisorctl restart ips-oracledb //restart database

systemctl list-units

Restart BO (node 1 and node 3 the same)
systemctl start*stop*restart BO1.service

Restart database node
systemctl start*stop*restart ips-oracledb

Restart opsui
systemctl start*stop*restart SIMULATOR1.service

su - lm
priv/start-maintenance-console lm4
init:stop().

17245d096e2a42f5bd328ee10990b68e

su - lm
priv/start lm1

su - switch
priv/start-maintenance-console sw4
init:stop().

comenzi pentru opri/restarta/a vedea starea la nodes cu mtls enable

priv/stop sw3 tls
priv/start sw3 tls
priv/sw_status sw3 tls

si asta ca sa vedeti ce cycle este in switch pe node:

priv/console sw1 tls
misctab:get_settcycles().

/apps_01/webapps/tomcat/conf/BO1/webapps/ips/WEB-INF/classes/com/vocalink/ips/cnc/spring/base-config.xml
populate.billing.report.table.cron=0 10 0 * * ? //default
populate.billing.report.table.cron=0 0/10 * 1/1 * ? * //every 10 minutes

devtech:
stanislav.scurtu
Welcome123Welcome123

df -h //space check

phlp,phlp-aws,phlp-jenkins,phlp-sit,phlp-mtls
--tags @SIT_REGRESSION --tags @PHLP --tags @SIT_Provisioning --tags ~@Manual_Only --tags ~@Deprecated

(SETTLEMENT_HISTORY_ID IN (121)) AND (BALANCE_TYPE IN ('OPEN')) AND ((PARTICIPANT_IDENTIFIER IN ('ACC00000017','PARTICIP007','PARTICIP017','PARTICIP016','PARTICIP037','PARTICIP018','ACC00000041','ACC00000012','PARTICIP021','ACC00000010')) AND (BALANCE_TYPE IN ('OPEN')))

transaction_distributor:txid_to_nodes("20220519PARTISO5535HH14162610393735").